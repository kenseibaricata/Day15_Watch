{"ast":null,"code":"var _jsxFileName = \"/Users/kensei/Desktop/\\u30AB\\u30EA\\u30AD\\u30E5\\u30E9\\u30E0/Day15/src/components/ClockTab.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClockTab = () => {\n  _s();\n  const [time, setTime] = useState('');\n  useEffect(() => {\n    // 時計の初期化と更新\n    const updateClock = () => {\n      const now = new Date();\n      const hours = now.getHours();\n      const minutes = now.getMinutes();\n      const seconds = now.getSeconds();\n\n      // 12時間制への変換\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      const hours12 = hours % 12 || 12; // 0時は12として表示\n\n      // 表示形式の整形（ゼロパディング）\n      const formattedHours = hours12.toString().padStart(2, '0');\n      const formattedMinutes = minutes.toString().padStart(2, '0');\n      const formattedSeconds = seconds.toString().padStart(2, '0');\n\n      // 時刻を更新\n      setTime(`${ampm} ${formattedHours}:${formattedMinutes}:${formattedSeconds}`);\n    };\n\n    // 初回実行\n    updateClock();\n\n    // 1秒ごとに更新\n    const intervalId = setInterval(updateClock, 1000);\n\n    // クリーンアップ関数\n    return () => clearInterval(intervalId);\n  }, []); // 空の依存配列で初回レンダリング時のみ実行\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tab-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clock\",\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ClockTab, \"PsMgnLgzzQiamQWS0F3M3yb0/nk=\");\n_c = ClockTab;\nexport default ClockTab;\nvar _c;\n$RefreshReg$(_c, \"ClockTab\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ClockTab","_s","time","setTime","updateClock","now","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","hours12","formattedHours","toString","padStart","formattedMinutes","formattedSeconds","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kensei/Desktop/カリキュラム/Day15/src/components/ClockTab.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ClockTab: React.FC = () => {\n  const [time, setTime] = useState<string>('');\n\n  useEffect(() => {\n    // 時計の初期化と更新\n    const updateClock = () => {\n      const now = new Date();\n      const hours = now.getHours();\n      const minutes = now.getMinutes();\n      const seconds = now.getSeconds();\n      \n      // 12時間制への変換\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      const hours12 = hours % 12 || 12; // 0時は12として表示\n      \n      // 表示形式の整形（ゼロパディング）\n      const formattedHours = hours12.toString().padStart(2, '0');\n      const formattedMinutes = minutes.toString().padStart(2, '0');\n      const formattedSeconds = seconds.toString().padStart(2, '0');\n      \n      // 時刻を更新\n      setTime(`${ampm} ${formattedHours}:${formattedMinutes}:${formattedSeconds}`);\n    };\n\n    // 初回実行\n    updateClock();\n    \n    // 1秒ごとに更新\n    const intervalId = setInterval(updateClock, 1000);\n    \n    // クリーンアップ関数\n    return () => clearInterval(intervalId);\n  }, []); // 空の依存配列で初回レンダリング時のみ実行\n\n  return (\n    <div className=\"tab-content\">\n      <div className=\"clock\">{time}</div>\n    </div>\n  );\n};\n\nexport default ClockTab; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,WAAW,GAAGA,CAAA,KAAM;MACxB,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;MACtB,MAAMC,KAAK,GAAGF,GAAG,CAACG,QAAQ,CAAC,CAAC;MAC5B,MAAMC,OAAO,GAAGJ,GAAG,CAACK,UAAU,CAAC,CAAC;MAChC,MAAMC,OAAO,GAAGN,GAAG,CAACO,UAAU,CAAC,CAAC;;MAEhC;MACA,MAAMC,IAAI,GAAGN,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;MACtC,MAAMO,OAAO,GAAGP,KAAK,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;;MAElC;MACA,MAAMQ,cAAc,GAAGD,OAAO,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAC1D,MAAMC,gBAAgB,GAAGT,OAAO,CAACO,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAC5D,MAAME,gBAAgB,GAAGR,OAAO,CAACK,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;;MAE5D;MACAd,OAAO,CAAC,GAAGU,IAAI,IAAIE,cAAc,IAAIG,gBAAgB,IAAIC,gBAAgB,EAAE,CAAC;IAC9E,CAAC;;IAED;IACAf,WAAW,CAAC,CAAC;;IAEb;IACA,MAAMgB,UAAU,GAAGC,WAAW,CAACjB,WAAW,EAAE,IAAI,CAAC;;IAEjD;IACA,OAAO,MAAMkB,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACErB,OAAA;IAAKwB,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC1BzB,OAAA;MAAKwB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEtB;IAAI;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAvCID,QAAkB;AAAA6B,EAAA,GAAlB7B,QAAkB;AAyCxB,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}