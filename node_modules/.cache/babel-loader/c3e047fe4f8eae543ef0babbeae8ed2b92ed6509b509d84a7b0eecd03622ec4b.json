{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StopwatchTab=()=>{const[isRunning,setIsRunning]=useState(false);const[elapsedTime,setElapsedTime]=useState(0);const[displayTime,setDisplayTime]=useState('00:00:00.00');const intervalRef=useRef(null);const startTimeRef=useRef(0);// ストップウォッチの更新\nuseEffect(()=>{if(isRunning){// 現在の時刻から開始時刻を引いて経過時間を計算\nstartTimeRef.current=Date.now()-elapsedTime;// 10ミリ秒ごとに更新\nintervalRef.current=window.setInterval(()=>{const currentElapsedTime=Date.now()-startTimeRef.current;setElapsedTime(currentElapsedTime);updateDisplay(currentElapsedTime);},10);}else if(intervalRef.current){// タイマーを停止\nclearInterval(intervalRef.current);intervalRef.current=null;}// クリーンアップ関数\nreturn()=>{if(intervalRef.current){clearInterval(intervalRef.current);intervalRef.current=null;}};},[isRunning]);// 表示の更新\nconst updateDisplay=timeMs=>{// ミリ秒を時間、分、秒、ミリ秒に変換\nconst totalMilliseconds=timeMs;const totalSeconds=Math.floor(totalMilliseconds/1000);const totalMinutes=Math.floor(totalSeconds/60);const hours=Math.floor(totalMinutes/60);const minutes=totalMinutes%60;const seconds=totalSeconds%60;const milliseconds=Math.floor(totalMilliseconds%1000/10);// 2桁のミリ秒\n// 表示形式の整形（ゼロパディング）\nconst formattedHours=hours.toString().padStart(2,'0');const formattedMinutes=minutes.toString().padStart(2,'0');const formattedSeconds=seconds.toString().padStart(2,'0');const formattedMilliseconds=milliseconds.toString().padStart(2,'0');// 時間を表示\nsetDisplayTime(\"\".concat(formattedHours,\":\").concat(formattedMinutes,\":\").concat(formattedSeconds,\".\").concat(formattedMilliseconds));};// スタート\nconst start=()=>{if(!isRunning){setIsRunning(true);}};// ストップ\nconst stop=()=>{if(isRunning){setIsRunning(false);}};// リセット\nconst reset=()=>{setIsRunning(false);setElapsedTime(0);updateDisplay(0);};return/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stopwatch\",children:displayTime}),/*#__PURE__*/_jsxs(\"div\",{className:\"stopwatch-controls\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:start,disabled:isRunning,children:\"Start\"}),/*#__PURE__*/_jsx(\"button\",{onClick:stop,disabled:!isRunning,children:\"Stop\"}),/*#__PURE__*/_jsx(\"button\",{onClick:reset,children:\"Reset\"})]})]});};export default StopwatchTab;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","StopwatchTab","isRunning","setIsRunning","elapsedTime","setElapsedTime","displayTime","setDisplayTime","intervalRef","startTimeRef","current","Date","now","window","setInterval","currentElapsedTime","updateDisplay","clearInterval","timeMs","totalMilliseconds","totalSeconds","Math","floor","totalMinutes","hours","minutes","seconds","milliseconds","formattedHours","toString","padStart","formattedMinutes","formattedSeconds","formattedMilliseconds","concat","start","stop","reset","className","children","onClick","disabled"],"sources":["/Users/kensei/Desktop/カリキュラム/Day15/src/components/StopwatchTab.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst StopwatchTab: React.FC = () => {\n  const [isRunning, setIsRunning] = useState<boolean>(false);\n  const [elapsedTime, setElapsedTime] = useState<number>(0);\n  const [displayTime, setDisplayTime] = useState<string>('00:00:00.00');\n  \n  const intervalRef = useRef<number | null>(null);\n  const startTimeRef = useRef<number>(0);\n\n  // ストップウォッチの更新\n  useEffect(() => {\n    if (isRunning) {\n      // 現在の時刻から開始時刻を引いて経過時間を計算\n      startTimeRef.current = Date.now() - elapsedTime;\n      \n      // 10ミリ秒ごとに更新\n      intervalRef.current = window.setInterval(() => {\n        const currentElapsedTime = Date.now() - startTimeRef.current;\n        setElapsedTime(currentElapsedTime);\n        updateDisplay(currentElapsedTime);\n      }, 10);\n    } else if (intervalRef.current) {\n      // タイマーを停止\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    \n    // クリーンアップ関数\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    };\n  }, [isRunning]);\n\n  // 表示の更新\n  const updateDisplay = (timeMs: number) => {\n    // ミリ秒を時間、分、秒、ミリ秒に変換\n    const totalMilliseconds = timeMs;\n    const totalSeconds = Math.floor(totalMilliseconds / 1000);\n    const totalMinutes = Math.floor(totalSeconds / 60);\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = totalMinutes % 60;\n    const seconds = totalSeconds % 60;\n    const milliseconds = Math.floor((totalMilliseconds % 1000) / 10); // 2桁のミリ秒\n    \n    // 表示形式の整形（ゼロパディング）\n    const formattedHours = hours.toString().padStart(2, '0');\n    const formattedMinutes = minutes.toString().padStart(2, '0');\n    const formattedSeconds = seconds.toString().padStart(2, '0');\n    const formattedMilliseconds = milliseconds.toString().padStart(2, '0');\n    \n    // 時間を表示\n    setDisplayTime(`${formattedHours}:${formattedMinutes}:${formattedSeconds}.${formattedMilliseconds}`);\n  };\n\n  // スタート\n  const start = () => {\n    if (!isRunning) {\n      setIsRunning(true);\n    }\n  };\n\n  // ストップ\n  const stop = () => {\n    if (isRunning) {\n      setIsRunning(false);\n    }\n  };\n\n  // リセット\n  const reset = () => {\n    setIsRunning(false);\n    setElapsedTime(0);\n    updateDisplay(0);\n  };\n\n  return (\n    <div className=\"tab-content\">\n      <div className=\"stopwatch\">{displayTime}</div>\n      <div className=\"stopwatch-controls\">\n        <button \n          onClick={start}\n          disabled={isRunning}\n        >\n          Start\n        </button>\n        <button \n          onClick={stop}\n          disabled={!isRunning}\n        >\n          Stop\n        </button>\n        <button onClick={reset}>Reset</button>\n      </div>\n    </div>\n  );\n};\n\nexport default StopwatchTab; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}