{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ClockTab=()=>{const[time,setTime]=useState('');useEffect(()=>{// 時計の初期化と更新\nconst updateClock=()=>{const now=new Date();const hours=now.getHours();const minutes=now.getMinutes();const seconds=now.getSeconds();// 12時間制への変換\nconst ampm=hours>=12?'PM':'AM';const hours12=hours%12||12;// 0時は12として表示\n// 表示形式の整形（ゼロパディング）\nconst formattedHours=hours12.toString().padStart(2,'0');const formattedMinutes=minutes.toString().padStart(2,'0');const formattedSeconds=seconds.toString().padStart(2,'0');// 時刻を更新\nsetTime(\"\".concat(ampm,\" \").concat(formattedHours,\":\").concat(formattedMinutes,\":\").concat(formattedSeconds));};// 初回実行\nupdateClock();// 1秒ごとに更新\nconst intervalId=setInterval(updateClock,1000);// クリーンアップ関数\nreturn()=>clearInterval(intervalId);},[]);// 空の依存配列で初回レンダリング時のみ実行\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"tab-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"clock\",children:time})});};export default ClockTab;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","ClockTab","time","setTime","updateClock","now","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","hours12","formattedHours","toString","padStart","formattedMinutes","formattedSeconds","concat","intervalId","setInterval","clearInterval","className","children"],"sources":["/Users/kensei/Desktop/カリキュラム/Day15/src/components/ClockTab.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ClockTab: React.FC = () => {\n  const [time, setTime] = useState<string>('');\n\n  useEffect(() => {\n    // 時計の初期化と更新\n    const updateClock = () => {\n      const now = new Date();\n      const hours = now.getHours();\n      const minutes = now.getMinutes();\n      const seconds = now.getSeconds();\n      \n      // 12時間制への変換\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      const hours12 = hours % 12 || 12; // 0時は12として表示\n      \n      // 表示形式の整形（ゼロパディング）\n      const formattedHours = hours12.toString().padStart(2, '0');\n      const formattedMinutes = minutes.toString().padStart(2, '0');\n      const formattedSeconds = seconds.toString().padStart(2, '0');\n      \n      // 時刻を更新\n      setTime(`${ampm} ${formattedHours}:${formattedMinutes}:${formattedSeconds}`);\n    };\n\n    // 初回実行\n    updateClock();\n    \n    // 1秒ごとに更新\n    const intervalId = setInterval(updateClock, 1000);\n    \n    // クリーンアップ関数\n    return () => clearInterval(intervalId);\n  }, []); // 空の依存配列で初回レンダリング時のみ実行\n\n  return (\n    <div className=\"tab-content\">\n      <div className=\"clock\">{time}</div>\n    </div>\n  );\n};\n\nexport default ClockTab; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnD,KAAM,CAAAC,QAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGN,QAAQ,CAAS,EAAE,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAM,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACtB,KAAM,CAAAC,KAAK,CAAGF,GAAG,CAACG,QAAQ,CAAC,CAAC,CAC5B,KAAM,CAAAC,OAAO,CAAGJ,GAAG,CAACK,UAAU,CAAC,CAAC,CAChC,KAAM,CAAAC,OAAO,CAAGN,GAAG,CAACO,UAAU,CAAC,CAAC,CAEhC;AACA,KAAM,CAAAC,IAAI,CAAGN,KAAK,EAAI,EAAE,CAAG,IAAI,CAAG,IAAI,CACtC,KAAM,CAAAO,OAAO,CAAGP,KAAK,CAAG,EAAE,EAAI,EAAE,CAAE;AAElC;AACA,KAAM,CAAAQ,cAAc,CAAGD,OAAO,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAC1D,KAAM,CAAAC,gBAAgB,CAAGT,OAAO,CAACO,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAC5D,KAAM,CAAAE,gBAAgB,CAAGR,OAAO,CAACK,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAE5D;AACAd,OAAO,IAAAiB,MAAA,CAAIP,IAAI,MAAAO,MAAA,CAAIL,cAAc,MAAAK,MAAA,CAAIF,gBAAgB,MAAAE,MAAA,CAAID,gBAAgB,CAAE,CAAC,CAC9E,CAAC,CAED;AACAf,WAAW,CAAC,CAAC,CAEb;AACA,KAAM,CAAAiB,UAAU,CAAGC,WAAW,CAAClB,WAAW,CAAE,IAAI,CAAC,CAEjD;AACA,MAAO,IAAMmB,aAAa,CAACF,UAAU,CAAC,CACxC,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,mBACErB,IAAA,QAAKwB,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1BzB,IAAA,QAAKwB,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAEvB,IAAI,CAAM,CAAC,CAChC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}