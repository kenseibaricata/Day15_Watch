{"ast":null,"code":"var _jsxFileName = \"/Users/kensei/Desktop/\\u30AB\\u30EA\\u30AD\\u30E5\\u30E9\\u30E0/Day15/src/components/StopwatchTab.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StopwatchTab = () => {\n  _s();\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [displayTime, setDisplayTime] = useState('00:00:00.00');\n  const intervalRef = useRef(null);\n  const startTimeRef = useRef(0);\n\n  // ストップウォッチの更新\n  useEffect(() => {\n    if (isRunning) {\n      // 現在の時刻から開始時刻を引いて経過時間を計算\n      startTimeRef.current = Date.now() - elapsedTime;\n\n      // 10ミリ秒ごとに更新\n      intervalRef.current = window.setInterval(() => {\n        const currentElapsedTime = Date.now() - startTimeRef.current;\n        setElapsedTime(currentElapsedTime);\n        updateDisplay(currentElapsedTime);\n      }, 10);\n    } else if (intervalRef.current) {\n      // タイマーを停止\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n\n    // クリーンアップ関数\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    };\n  }, [isRunning]);\n\n  // 表示の更新\n  const updateDisplay = timeMs => {\n    // ミリ秒を時間、分、秒、ミリ秒に変換\n    const totalMilliseconds = timeMs;\n    const totalSeconds = Math.floor(totalMilliseconds / 1000);\n    const totalMinutes = Math.floor(totalSeconds / 60);\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = totalMinutes % 60;\n    const seconds = totalSeconds % 60;\n    const milliseconds = Math.floor(totalMilliseconds % 1000 / 10); // 2桁のミリ秒\n\n    // 表示形式の整形（ゼロパディング）\n    const formattedHours = hours.toString().padStart(2, '0');\n    const formattedMinutes = minutes.toString().padStart(2, '0');\n    const formattedSeconds = seconds.toString().padStart(2, '0');\n    const formattedMilliseconds = milliseconds.toString().padStart(2, '0');\n\n    // 時間を表示\n    setDisplayTime(`${formattedHours}:${formattedMinutes}:${formattedSeconds}.${formattedMilliseconds}`);\n  };\n\n  // スタート\n  const start = () => {\n    if (!isRunning) {\n      setIsRunning(true);\n    }\n  };\n\n  // ストップ\n  const stop = () => {\n    if (isRunning) {\n      setIsRunning(false);\n    }\n  };\n\n  // リセット\n  const reset = () => {\n    setIsRunning(false);\n    setElapsedTime(0);\n    updateDisplay(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tab-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stopwatch\",\n      children: displayTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stopwatch-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: start,\n        disabled: isRunning,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stop,\n        disabled: !isRunning,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(StopwatchTab, \"QLvmzLDVioCCbyGG6566TeODnW4=\");\n_c = StopwatchTab;\nexport default StopwatchTab;\nvar _c;\n$RefreshReg$(_c, \"StopwatchTab\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","StopwatchTab","_s","isRunning","setIsRunning","elapsedTime","setElapsedTime","displayTime","setDisplayTime","intervalRef","startTimeRef","current","Date","now","window","setInterval","currentElapsedTime","updateDisplay","clearInterval","timeMs","totalMilliseconds","totalSeconds","Math","floor","totalMinutes","hours","minutes","seconds","milliseconds","formattedHours","toString","padStart","formattedMinutes","formattedSeconds","formattedMilliseconds","start","stop","reset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/kensei/Desktop/カリキュラム/Day15/src/components/StopwatchTab.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst StopwatchTab: React.FC = () => {\n  const [isRunning, setIsRunning] = useState<boolean>(false);\n  const [elapsedTime, setElapsedTime] = useState<number>(0);\n  const [displayTime, setDisplayTime] = useState<string>('00:00:00.00');\n  \n  const intervalRef = useRef<number | null>(null);\n  const startTimeRef = useRef<number>(0);\n\n  // ストップウォッチの更新\n  useEffect(() => {\n    if (isRunning) {\n      // 現在の時刻から開始時刻を引いて経過時間を計算\n      startTimeRef.current = Date.now() - elapsedTime;\n      \n      // 10ミリ秒ごとに更新\n      intervalRef.current = window.setInterval(() => {\n        const currentElapsedTime = Date.now() - startTimeRef.current;\n        setElapsedTime(currentElapsedTime);\n        updateDisplay(currentElapsedTime);\n      }, 10);\n    } else if (intervalRef.current) {\n      // タイマーを停止\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    \n    // クリーンアップ関数\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    };\n  }, [isRunning]);\n\n  // 表示の更新\n  const updateDisplay = (timeMs: number) => {\n    // ミリ秒を時間、分、秒、ミリ秒に変換\n    const totalMilliseconds = timeMs;\n    const totalSeconds = Math.floor(totalMilliseconds / 1000);\n    const totalMinutes = Math.floor(totalSeconds / 60);\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = totalMinutes % 60;\n    const seconds = totalSeconds % 60;\n    const milliseconds = Math.floor((totalMilliseconds % 1000) / 10); // 2桁のミリ秒\n    \n    // 表示形式の整形（ゼロパディング）\n    const formattedHours = hours.toString().padStart(2, '0');\n    const formattedMinutes = minutes.toString().padStart(2, '0');\n    const formattedSeconds = seconds.toString().padStart(2, '0');\n    const formattedMilliseconds = milliseconds.toString().padStart(2, '0');\n    \n    // 時間を表示\n    setDisplayTime(`${formattedHours}:${formattedMinutes}:${formattedSeconds}.${formattedMilliseconds}`);\n  };\n\n  // スタート\n  const start = () => {\n    if (!isRunning) {\n      setIsRunning(true);\n    }\n  };\n\n  // ストップ\n  const stop = () => {\n    if (isRunning) {\n      setIsRunning(false);\n    }\n  };\n\n  // リセット\n  const reset = () => {\n    setIsRunning(false);\n    setElapsedTime(0);\n    updateDisplay(0);\n  };\n\n  return (\n    <div className=\"tab-content\">\n      <div className=\"stopwatch\">{displayTime}</div>\n      <div className=\"stopwatch-controls\">\n        <button \n          onClick={start}\n          disabled={isRunning}\n        >\n          Start\n        </button>\n        <button \n          onClick={stop}\n          disabled={!isRunning}\n        >\n          Stop\n        </button>\n        <button onClick={reset}>Reset</button>\n      </div>\n    </div>\n  );\n};\n\nexport default StopwatchTab; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}