{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const STORAGE_KEY='reactClockAlarmSettings';const AlarmTab=()=>{const[alarmState,setAlarmState]=useState({isSet:false,time:''});const[alarmStatus,setAlarmStatus]=useState('');const alarmSoundRef=useRef(null);const timeInputRef=useRef(null);// localStorageからアラーム設定を読み込む\nuseEffect(()=>{try{const savedState=localStorage.getItem(STORAGE_KEY);if(savedState){const parsedState=JSON.parse(savedState);setAlarmState(parsedState);if(parsedState.isSet){setAlarmStatus(\"\\u30A2\\u30E9\\u30FC\\u30E0\\u8A2D\\u5B9A: \".concat(formatAlarmTime(parsedState.time)));}}}catch(error){console.error('アラーム設定の読み込みに失敗しました:',error);}},[]);// アラームの確認\nuseEffect(()=>{let intervalId;if(alarmState.isSet){// 10秒ごとに確認（過負荷防止のため）\nintervalId=window.setInterval(()=>{checkAlarm();},10000);// 初回チェック\ncheckAlarm();}return()=>{if(intervalId){clearInterval(intervalId);}stopAlarmSound();};},[alarmState]);// アラームのチェック\nconst checkAlarm=()=>{if(!alarmState.isSet||!alarmState.time){return;}const now=new Date();const currentHours=now.getHours().toString().padStart(2,'0');const currentMinutes=now.getMinutes().toString().padStart(2,'0');const currentTimeStr=\"\".concat(currentHours,\":\").concat(currentMinutes);if(currentTimeStr===alarmState.time){triggerAlarm();}};// アラームの発動\nconst triggerAlarm=()=>{playAlarmSound();showNotification();setAlarmStatus('⚠️ アラーム発動中！');};// アラーム音の再生\nconst playAlarmSound=()=>{if(alarmSoundRef.current){alarmSoundRef.current.loop=true;alarmSoundRef.current.play().catch(error=>{console.error('アラーム音の再生に失敗しました:',error);});}};// アラーム音の停止\nconst stopAlarmSound=()=>{if(alarmSoundRef.current){alarmSoundRef.current.pause();alarmSoundRef.current.currentTime=0;}};// 通知の表示\nconst showNotification=()=>{if(!('Notification'in window)){return;}if(Notification.permission==='granted'){new Notification('React Clock Alarm',{body:'アラーム時刻になりました！',icon:'/favicon.ico'});}else if(Notification.permission!=='denied'){Notification.requestPermission();}};// アラームのセット\nconst setAlarm=()=>{if(!timeInputRef.current||!timeInputRef.current.value){return;}const newAlarmState={isSet:true,time:timeInputRef.current.value};setAlarmState(newAlarmState);setAlarmStatus(\"\\u30A2\\u30E9\\u30FC\\u30E0\\u8A2D\\u5B9A\\u5B8C\\u4E86: \".concat(formatAlarmTime(newAlarmState.time)));// localStorageに保存\ntry{localStorage.setItem(STORAGE_KEY,JSON.stringify(newAlarmState));}catch(error){console.error('アラーム設定の保存に失敗しました:',error);}};// アラームのキャンセル\nconst cancelAlarm=()=>{var _timeInputRef$current;const newAlarmState={isSet:false,time:((_timeInputRef$current=timeInputRef.current)===null||_timeInputRef$current===void 0?void 0:_timeInputRef$current.value)||''};setAlarmState(newAlarmState);setAlarmStatus('');stopAlarmSound();// localStorageに保存\ntry{localStorage.setItem(STORAGE_KEY,JSON.stringify(newAlarmState));}catch(error){console.error('アラーム設定の保存に失敗しました:',error);}};// HH:MM形式を見やすく変換\nconst formatAlarmTime=timeStr=>{if(!timeStr)return'';const[hours,minutes]=timeStr.split(':');if(!hours||!minutes)return timeStr;const hoursNum=parseInt(hours,10);const ampm=hoursNum>=12?'PM':'AM';const hours12=hoursNum%12||12;return\"\".concat(ampm,\" \").concat(hours12,\":\").concat(minutes);};return/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"alarm-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"time-picker\",children:/*#__PURE__*/_jsx(\"input\",{type:\"time\",ref:timeInputRef,defaultValue:alarmState.time})}),/*#__PURE__*/_jsxs(\"div\",{className:\"alarm-controls\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:setAlarm,disabled:alarmState.isSet,children:\"\\u30A2\\u30E9\\u30FC\\u30E0\\u3092\\u30BB\\u30C3\\u30C8\"}),/*#__PURE__*/_jsx(\"button\",{onClick:cancelAlarm,disabled:!alarmState.isSet,children:\"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"alarm-status\",children:alarmStatus})]}),/*#__PURE__*/_jsx(\"audio\",{ref:alarmSoundRef,src:\"https://assets.mixkit.co/sfx/preview/mixkit-alarm-digital-clock-beep-989.mp3\"})]});};export default AlarmTab;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","STORAGE_KEY","AlarmTab","alarmState","setAlarmState","isSet","time","alarmStatus","setAlarmStatus","alarmSoundRef","timeInputRef","savedState","localStorage","getItem","parsedState","JSON","parse","concat","formatAlarmTime","error","console","intervalId","window","setInterval","checkAlarm","clearInterval","stopAlarmSound","now","Date","currentHours","getHours","toString","padStart","currentMinutes","getMinutes","currentTimeStr","triggerAlarm","playAlarmSound","showNotification","current","loop","play","catch","pause","currentTime","Notification","permission","body","icon","requestPermission","setAlarm","value","newAlarmState","setItem","stringify","cancelAlarm","_timeInputRef$current","timeStr","hours","minutes","split","hoursNum","parseInt","ampm","hours12","className","children","type","ref","defaultValue","onClick","disabled","src"],"sources":["/Users/kensei/Desktop/カリキュラム/Day15/src/components/AlarmTab.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\ninterface AlarmState {\n  isSet: boolean;\n  time: string; // HH:MM形式\n}\n\nconst STORAGE_KEY = 'reactClockAlarmSettings';\n\nconst AlarmTab: React.FC = () => {\n  const [alarmState, setAlarmState] = useState<AlarmState>({\n    isSet: false,\n    time: ''\n  });\n  const [alarmStatus, setAlarmStatus] = useState<string>('');\n  const alarmSoundRef = useRef<HTMLAudioElement>(null);\n  const timeInputRef = useRef<HTMLInputElement>(null);\n\n  // localStorageからアラーム設定を読み込む\n  useEffect(() => {\n    try {\n      const savedState = localStorage.getItem(STORAGE_KEY);\n      if (savedState) {\n        const parsedState = JSON.parse(savedState) as AlarmState;\n        setAlarmState(parsedState);\n        if (parsedState.isSet) {\n          setAlarmStatus(`アラーム設定: ${formatAlarmTime(parsedState.time)}`);\n        }\n      }\n    } catch (error) {\n      console.error('アラーム設定の読み込みに失敗しました:', error);\n    }\n  }, []);\n\n  // アラームの確認\n  useEffect(() => {\n    let intervalId: number;\n    \n    if (alarmState.isSet) {\n      // 10秒ごとに確認（過負荷防止のため）\n      intervalId = window.setInterval(() => {\n        checkAlarm();\n      }, 10000);\n      \n      // 初回チェック\n      checkAlarm();\n    }\n    \n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n      stopAlarmSound();\n    };\n  }, [alarmState]);\n\n  // アラームのチェック\n  const checkAlarm = () => {\n    if (!alarmState.isSet || !alarmState.time) {\n      return;\n    }\n    \n    const now = new Date();\n    const currentHours = now.getHours().toString().padStart(2, '0');\n    const currentMinutes = now.getMinutes().toString().padStart(2, '0');\n    const currentTimeStr = `${currentHours}:${currentMinutes}`;\n    \n    if (currentTimeStr === alarmState.time) {\n      triggerAlarm();\n    }\n  };\n\n  // アラームの発動\n  const triggerAlarm = () => {\n    playAlarmSound();\n    showNotification();\n    setAlarmStatus('⚠️ アラーム発動中！');\n  };\n\n  // アラーム音の再生\n  const playAlarmSound = () => {\n    if (alarmSoundRef.current) {\n      alarmSoundRef.current.loop = true;\n      alarmSoundRef.current.play().catch(error => {\n        console.error('アラーム音の再生に失敗しました:', error);\n      });\n    }\n  };\n\n  // アラーム音の停止\n  const stopAlarmSound = () => {\n    if (alarmSoundRef.current) {\n      alarmSoundRef.current.pause();\n      alarmSoundRef.current.currentTime = 0;\n    }\n  };\n\n  // 通知の表示\n  const showNotification = () => {\n    if (!('Notification' in window)) {\n      return;\n    }\n    \n    if (Notification.permission === 'granted') {\n      new Notification('React Clock Alarm', {\n        body: 'アラーム時刻になりました！',\n        icon: '/favicon.ico'\n      });\n    } else if (Notification.permission !== 'denied') {\n      Notification.requestPermission();\n    }\n  };\n\n  // アラームのセット\n  const setAlarm = () => {\n    if (!timeInputRef.current || !timeInputRef.current.value) {\n      return;\n    }\n    \n    const newAlarmState = {\n      isSet: true,\n      time: timeInputRef.current.value\n    };\n    \n    setAlarmState(newAlarmState);\n    setAlarmStatus(`アラーム設定完了: ${formatAlarmTime(newAlarmState.time)}`);\n    \n    // localStorageに保存\n    try {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(newAlarmState));\n    } catch (error) {\n      console.error('アラーム設定の保存に失敗しました:', error);\n    }\n  };\n\n  // アラームのキャンセル\n  const cancelAlarm = () => {\n    const newAlarmState = {\n      isSet: false,\n      time: timeInputRef.current?.value || ''\n    };\n    \n    setAlarmState(newAlarmState);\n    setAlarmStatus('');\n    stopAlarmSound();\n    \n    // localStorageに保存\n    try {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(newAlarmState));\n    } catch (error) {\n      console.error('アラーム設定の保存に失敗しました:', error);\n    }\n  };\n\n  // HH:MM形式を見やすく変換\n  const formatAlarmTime = (timeStr: string): string => {\n    if (!timeStr) return '';\n    \n    const [hours, minutes] = timeStr.split(':');\n    if (!hours || !minutes) return timeStr;\n    \n    const hoursNum = parseInt(hours, 10);\n    const ampm = hoursNum >= 12 ? 'PM' : 'AM';\n    const hours12 = hoursNum % 12 || 12;\n    \n    return `${ampm} ${hours12}:${minutes}`;\n  };\n\n  return (\n    <div className=\"tab-content\">\n      <div className=\"alarm-container\">\n        <div className=\"time-picker\">\n          <input \n            type=\"time\" \n            ref={timeInputRef}\n            defaultValue={alarmState.time}\n          />\n        </div>\n        <div className=\"alarm-controls\">\n          <button \n            onClick={setAlarm}\n            disabled={alarmState.isSet}\n          >\n            アラームをセット\n          </button>\n          <button \n            onClick={cancelAlarm}\n            disabled={!alarmState.isSet}\n          >\n            キャンセル\n          </button>\n        </div>\n        <div className=\"alarm-status\">{alarmStatus}</div>\n      </div>\n      <audio \n        ref={alarmSoundRef}\n        src=\"https://assets.mixkit.co/sfx/preview/mixkit-alarm-digital-clock-beep-989.mp3\"\n      />\n    </div>\n  );\n};\n\nexport default AlarmTab; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}